// <auto-generated />
using System;
using BetterLifeHospital.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BetterLifeHospital.Migrations
{
    [DbContext(typeof(BetterLifeDbContext))]
    partial class BetterLifeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("BetterLifeHospital.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("appointments");
                });

            modelBuilder.Entity("BetterLifeHospital.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("License")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Chibueze",
                            LastName = "Geoffrey",
                            License = new Guid("c7d3b2ec-1050-407d-8c30-18ade5ab5eec")
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Chibuike",
                            LastName = "Aneke",
                            License = new Guid("71e8e776-fcc3-4cbc-9b82-0c73e3f0e9b1")
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Patrick",
                            LastName = "Isak",
                            License = new Guid("368d7ad9-73e3-4b88-a6f7-2a12fed0db63")
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Cristiano",
                            LastName = "Alvaro",
                            License = new Guid("b7bc75b6-0fa2-4f97-89d6-3233a0783a14")
                        });
                });

            modelBuilder.Entity("BetterLifeHospital.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            DoctorId = 1,
                            FirstName = "Linda",
                            LastName = "Lee",
                            Problem = "Head ache"
                        });
                });

            modelBuilder.Entity("BetterLifeHospital.Entities.Appointment", b =>
                {
                    b.HasOne("BetterLifeHospital.Entities.Doctor", "doctor")
                        .WithMany("appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BetterLifeHospital.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("BetterLifeHospital.Entities.Patient", b =>
                {
                    b.HasOne("BetterLifeHospital.Entities.Doctor", "doctor")
                        .WithMany("patients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("BetterLifeHospital.Entities.Doctor", b =>
                {
                    b.Navigation("appointments");

                    b.Navigation("patients");
                });
#pragma warning restore 612, 618
        }
    }
}
